{"version":3,"sources":["Button.js","QuestionList.js","App.js","index.js"],"names":["Button","onClick","title","children","QuestionList","list","onDismiss","map","item","index","className","key","id","length","question","answers","answer","i","correctAnswer","App","props","state","counter","isLoaded","error","fetchQuestions","bind","createQuiz","this","req","XMLHttpRequest","open","responseType","onload","e","data","Uint8Array","response","workbook","XLSX","read","type","worksheet","Sheets","utils","sheet_add_json","answer1","answer2","answer3","answer4","timeout","correct_answer","skipHeader","origin","r","c","writeFile","send","fetch","then","res","json","result","questions","results","decodeURIComponent","incorrect_answers","Math","floor","random","splice","setState","prevState","console","log","updatedList","filter","x","message","href","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d961fe6f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ onClick, title, children }) => (\n  <button title={title} onClick={onClick}>\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button.js';\n\nconst QuestionList = ({ list, onDismiss }) => (\n  <div>\n    {list.map((item, index) => (\n      <div className=\"question-container\" key={item.id}>\n        <div className=\"question-header\">\n          <Button title=\"Delete Question\" onClick={() => onDismiss(item.id)}>\n            x\n          </Button>\n          Question {index + 1} of {list.length}\n        </div>\n        <div className=\"question\">{item.question}</div>\n        {item.answers.map((answer, i) => {\n          return i === item.correctAnswer ? (\n            <div className=\"answer correct\" key={i}>\n              {answer}\n            </div>\n          ) : (\n            <div className=\"answer\" key={i}>\n              {answer}\n            </div>\n          );\n        })}\n      </div>\n    ))}\n  </div>\n);\n\nexport default QuestionList;\n","import React, { Component } from 'react';\nimport Button from './Button.js';\nimport QuestionList from './QuestionList.js';\nimport XLSX from 'xlsx';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      isLoaded: false,\n      error: null,\n      list: [],\n    };\n    this.fetchQuestions = this.fetchQuestions.bind(this);\n    this.createQuiz = this.createQuiz.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  createQuiz() {\n    let { list } = this.state;\n\n    const template_url =\n      'https://kahoot.com/files/2019/08/Kahoot-Quiz-Spreadsheet-Template.xlsx';\n\n    var req = new XMLHttpRequest();\n    req.open('GET', template_url, true);\n    req.responseType = 'arraybuffer';\n\n    req.onload = function (e) {\n      var data = new Uint8Array(req.response);\n      var workbook = XLSX.read(data, { type: 'array' });\n      var worksheet = workbook.Sheets['Sheet1'];\n      XLSX.utils.sheet_add_json(\n        worksheet,\n        list.map(item => {\n          const question = {};\n\n          question.question = item.question;\n          question.answer1 = item.answers[0];\n          question.answer2 = item.answers[1];\n          question.answer3 = item.answers[2];\n          question.answer4 = item.answers[3];\n          question.timeout = 20;\n          question.correct_answer = item.correctAnswer + 1;\n\n          return question;\n        }),\n        { skipHeader: true, origin: { r: 8, c: 1 } }\n      );\n\n      XLSX.writeFile(workbook, 'quiz.xlsx');\n    };\n\n    req.send();\n  }\n\n  fetchQuestions() {\n    let { counter } = this.state;\n\n    fetch('https://opentdb.com/api.php?amount=10&type=multiple&encode=url3986')\n      .then(res => res.json())\n      .then(\n        result => {\n          const questions = result.results.map(result => {\n            const question = {\n              id: counter++,\n              question: decodeURIComponent(result.question),\n              answers: [\n                decodeURIComponent(result.incorrect_answers[0]),\n                decodeURIComponent(result.incorrect_answers[1]),\n                decodeURIComponent(result.incorrect_answers[2]),\n              ],\n            };\n            question.correctAnswer = Math.floor(Math.random() * 4);\n            question.answers.splice(\n              question.correctAnswer,\n              0,\n              decodeURIComponent(result.correct_answer)\n            );\n            return question;\n          });\n\n          this.setState(prevState => ({\n            isLoaded: true,\n            counter,\n            list: [...questions, ...prevState.list],\n          }));\n        },\n        error => {\n          console.log(error);\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  onDismiss(id) {\n    const updatedList = this.state.list.filter(x => x.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n\n  render() {\n    const { error, isLoaded, list } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"header\">\n            <h2>\n              Kahoot Quiz Generator - {list.length}{' '}\n              {list.length === 1 ? 'Question' : 'Questions'}\n            </h2>\n\n            <p>\n              This page retrieves random questions from the{' '}\n              <a href=\"https://opentdb.com/\">Open Trivia DB</a> and allows users\n              to generate an Excel file (XLSX) that is compatible with the{' '}\n              <a href=\"https://kahoot.com\">Kahoot Quiz Platform</a>.\n            </p>\n            <Button onClick={this.fetchQuestions}>Add More Questions</Button>\n            {list.length ? (\n              <Button onClick={this.createQuiz}>Download Kahoot XLSX</Button>\n            ) : null}\n          </div>\n          <QuestionList list={list} onDismiss={this.onDismiss} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// if (module.hot) {\n//   module.hot.accept();\n// }\n"],"sourceRoot":""}